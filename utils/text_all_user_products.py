

async def get_text_for_all_products(products: list) -> str:
    '''–§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–µ–∫—Å—Ç—É –ø—Ä–æ –≤—Å—ñ —Ç–æ–≤–∞—Ä–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'''
    
    str = '<b>–û—Å—å –≤—Å—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –≤–∞—à—ñ —Ç–æ–≤–∞—Ä–∏</b>üßê:\n'
    
    # [(id, tg_id, URL, name, store_name, price, min_price, max_price, state, currency)] 
    for tupl in products:
        
        temp_str = f'''\nüõí<b>–ú–∞–≥–∞–∑–∏–Ω:</b> {tupl[4]}\nüìù<b>–ù–∞–∑–≤–∞ —Ç–æ–≤–∞—Ä–∞:</b> {tupl[3]}\nüí∏<b>–¶—ñ–Ω–∞ –∑–∞—Ä–∞–∑:</b> {tupl[5]}{tupl[-1]}\n'''
        
        if tupl[5] != tupl[6]:
            temp_str+=f'üìâ<b>–ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ —Ü—ñ–Ω–∞:</b> {tupl[6]}{tupl[-1]}\n'
        
        if tupl[5] != tupl[7]:
            temp_str+=f'üìà<b>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ —Ü—ñ–Ω–∞:</b> {tupl[7]}{tupl[-1]}\n'
            
        if tupl[-2]:
            temp_str+=f'‚ùî<b>–°—Ç–∞—Ç—É—Å:</b> {tupl[-2]}\n'
        
        temp_str+='\n'
        
        str+=temp_str
        
    return str


async def get_text_for_product(product: list) -> str:
    '''–§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–µ–∫—Å—Ç—É –ø—Ä–æ —Ç–æ–≤–∞—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞'''
    
    str = '<b>–û—Å—å —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ü–µ–π —Ç–æ–≤–∞—Ä</b>üßê:\n'
    
    # [(id, tg_id, URL, name, store_name, price, min_price, max_price, state, currency)] 
    for tupl in product:
        
        temp_str = f'''\nüõí<b>–ú–∞–≥–∞–∑–∏–Ω:</b> {tupl[4]}\nüìù<b>–ù–∞–∑–≤–∞ —Ç–æ–≤–∞—Ä–∞:</b> {tupl[3]}\nüí∏<b>–¶—ñ–Ω–∞ –∑–∞—Ä–∞–∑:</b> {tupl[5]}{tupl[-1]}\n'''
        
        if tupl[5] != tupl[6]:
            temp_str+=f'üìâ<b>–ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ —Ü—ñ–Ω–∞:</b> {tupl[6]}{tupl[-1]}\n'
        
        if tupl[5] != tupl[7]:
            temp_str+=f'üìà<b>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ —Ü—ñ–Ω–∞:</b> {tupl[7]}{tupl[-1]}\n'
            
        if tupl[-2]:
            temp_str+=f'‚ùî<b>–°—Ç–∞—Ç—É—Å:</b> {tupl[-2]}\n'
        
        temp_str+='\n'
        
        str+=temp_str
        
    return str